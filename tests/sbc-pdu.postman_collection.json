{
	"info": {
		"_postman_id": "23a79b96-c29e-4b22-a39d-e3f1798fefdd",
		"name": "sbc-pdu",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Verify auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Content-Type is \"text/plain\"', function () {",
									"    pm.response.to.have.header('Content-Type');",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/plain');",
									"});",
									"pm.test('Body is \"OK\"', function () {",
									"    const body = pm.response.text();",
									"    pm.expect(body).to.eql('OK');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify auth (invalid credentials)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"pm.test('Content-Type is \"text/plain\"', function () {",
									"    pm.response.to.have.header('Content-Type');",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/plain');",
									"});",
									"pm.test('WWW-Authenticate is \"Basic realm=\"SBC-PDU\"\"', function () {",
									"    pm.response.to.have.header('WWW-Authenticate');",
									"    pm.expect(pm.response.headers.get('WWW-Authenticate')).to.eql('Basic realm=\"SBC-PDU\"');",
									"});",
									"pm.test('Body is \"Unauthorized\"', function () {",
									"    const body = pm.response.text();",
									"    pm.expect(body).to.eql('Unauthorized');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "invalid",
									"type": "string"
								},
								{
									"key": "username",
									"value": "invalid",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify auth (missing credentials)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"pm.test('Content-Type is \"text/plain\"', function () {",
									"    pm.response.to.have.header('Content-Type');",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/plain');",
									"});",
									"pm.test('WWW-Authenticate is \"Basic realm=\"SBC-PDU\"\"', function () {",
									"    pm.response.to.have.header('WWW-Authenticate');",
									"    pm.expect(pm.response.headers.get('WWW-Authenticate')).to.eql('Basic realm=\"SBC-PDU\"');",
									"});",
									"pm.test('Body is \"Unauthorized\"', function () {",
									"    const body = pm.response.text();",
									"    pm.expect(body).to.eql('Unauthorized');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "invalid",
									"type": "string"
								},
								{
									"key": "username",
									"value": "invalid",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"roman\",\n    \"oldPassword\": \"sbc-pdu\",\n    \"newPassword\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify changed credentials",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Content-Type is \"text/plain\"', function () {",
									"    pm.response.to.have.header('Content-Type');",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/plain');",
									"});",
									"pm.test('Body is \"OK\"', function () {",
									"    const body = pm.response.text();",
									"    pm.expect(body).to.eql('OK');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test",
									"type": "string"
								},
								{
									"key": "username",
									"value": "roman",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change credentials back",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test",
									"type": "string"
								},
								{
									"key": "username",
									"value": "roman",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"oldPassword\": \"test\",\n    \"newPassword\": \"sbc-pdu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change credentials (missing username)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test('Body is \"Missing \"username\" property.\"', function () {",
									"    const body = pm.response.text();",
									"    pm.expect(body).to.eq('Missing \"username\" property.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"oldPassword\": \"sbc-pdu\",\n    \"newPassword\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Hostname",
			"item": [
				{
					"name": "Get hostname",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Content-Type is \"application/json\"', function () {",
									"    pm.response.to.have.header('Content-Type');",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"pm.test('Body is JSON with hostname', function () {",
									"    const body = pm.response.json();",
									"    pm.expect(body).haveOwnProperty('hostname');",
									"    pm.expect(body.hostname).to.match(/^sbc-pdu\\_[0-9a-f]{12}$/);",
									"    pm.collectionVariables.set('originalHostname', body.hostname);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/hostname",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"hostname"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change hostname",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hostname\": \"my-pdu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/hostname",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"hostname"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify changed hostname",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test('Content-Type is \"application/json\"', function () {",
									"    pm.response.to.have.header('Content-Type');",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"pm.test('Body is JSON with hostname', function () {",
									"    const body = pm.response.json();",
									"    pm.expect(body).haveOwnProperty('hostname');",
									"    pm.expect(body.hostname).to.eq('my-pdu');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/hostname",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"hostname"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change hostname back",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hostname\": \"{{originalHostname}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/hostname",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"hostname"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "sbc-pdu",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "192.168.1.237",
			"type": "default"
		},
		{
			"key": "originalHostname",
			"value": ""
		}
	]
}